---

- hosts: prod
  user: root
  roles:
   - { role: base, tags: [ 'base' ] }
   - { role: papertrail, tags: [ 'papertrail' ] }
   - { role: nginx, tags: [ 'nginx' ] }
   - { role: certbot, tags: [ 'certbot' ] }
   - { role: varnish, tags: [ 'varnish' ] }
   - { role: sslterminator, tags: [ 'sslterminator' ] }
   - { role: php-fpm, tags: [ 'php-fpm' ] }
   - { role: backups, tags: [ 'backups' ] }
   - { role: dbserver, tags: [ 'dbserver' ] }
   - { role: drupal-db, tags: [ 'drupal-db' ] }
   - { role: memcached, tags: [ 'memcached' ] }
   - { role: drush, tags: [ 'drush' ] }
   - { role: drupal-log, tags: [ 'drupal-log' ] }
     #- { role: external-smtp, tags: [ 'external-smtp' ] }
   - { role: monit, tags: [ 'monit' ] }
   - { role: newrelic, tags: [ 'newrelic' ] }
   - { role: newrelic-sysmon, tags: [ 'newrelic-sysmon' ] }
   - { role: newrelic-infra, tags: [ 'newrelic-infra' ] }

  vars_files:
  - prod-vars.yml

  tasks:
    # Disable email from cron
    - name: "Disable emails from failed cronjobs for nginx user"
      cron:
        name: "MAILTO"
        env: yes
        value: ""
        state: "present"
        user: nginx
      tags: ['cron']

    # Set drupal cron to be run every minute and alternate between both servers
    - name: "Run drupal cronjob with nginx user at even minutes"
      cron:
        name: "Run Drupal cronjobs with drush"
        minute: "*/2"
        job: "/usr/lib/composer/vendor/bin/drush --root={{ drupal_web_root }} --uri={{ domain1_name }} cron"
        state: "present"
        user: nginx
      tags: ['cron']

    - name: make sure SSL certificate is installed
      copy:
        content: "{{ ssl_certificate }}"
        dest: "/etc/nginx/ssl/food.gov.uk.pem"
        owner: root
        group: root
        mode: 0644
        tags: ['certs']

    - name: make sure SSL private key is installed
      copy:
        content: "{{ ssl_private_key }}"
        dest: "/etc/nginx/ssl/food.gov.uk.key"
        owner: root
        group: root
        mode: 0600
        tags: ['certs']


  vars:
    wkv_site_env: "prod"

    domain1_name: "myhaccp.fsa.prod.wunder.io"
    domain2_name: "myhaccp.food.gov.uk"
    drupal_web_root: "/var/www/{{ domain1_name }}/current/web"

    varnish_control_key: "{{ varnish_control_key }}"
    memory_app: 2048 # In MB should be atleast 4x php_memory_limit
    memory_db: 1024 # In MB


    ## Nginx ##

    # Apps I want to run on this server
    apps:
      - server_name: "{{ domain1_name }}"
        http_port: 8080
        docroot: "{{ drupal_web_root }}"
      - server_name: "{{ domain2_name }}"
        http_port: 8080
        docroot: "{{ drupal_web_root }}"

    # You can also define aliases with app_dir_aliases, see ansible/playbook/roles/nginx/templates/all_apps.conf.j2

    # Automatically create docroot folders
    create_docroot: True

    ## Php-fpm ##

    # You can set any php.ini variable like this:
    #php_ini:
    #  - section: [section]
    #    options:
    #      - key: [php variable]
    #        val: "[value]"

    # See ansible_playbook/roles/php-fpm/defaults/main.yml for examples

    ## Memcached ##

    #memcached_port: 11211
    #memcached_maxconn: 1024
    #memcached_cachesize: 256
    #memcached_options: "-I 4M"


    ## Drupal-log ##

    drupal_log_path: /var/log/drupal.log


    ## External-smtp ##

    external_smtp_tls_security_level: 'encrypt'
    external_smtp_relayhost: '[smtp.sparkpostmail.com]:587'
    # external_smtp_sasl_password_maps value defined in prod-vars.yml


    ## Monit ##
    monit_enabled: True
    monit_alert_email_service_name: "{{ project_name }} prod {{ ansible_nodename }}"
    monit_alert_email_from: "{{ support_email }}"
    monit_alert_email_to: "{{ support_email }}"
    monit_check_sshd: True
    monit_check_nginx: True
    monit_check_memcached: True
    monit_check_php_fpm: True
    monit_check_remote_syslog: True
    monit_check_cron: True
    monit_check_mysql: True

    ## Papertrail ##
    papertrail_enabled: True
    papertrail_remote_syslog2_version: "0.16"
    papertrail_conf: "/etc/log_files.yml"
    papertrail_logs:
      - /var/log/secure
      - /var/log/maillog

    # papertrail host and port defined in prod-vars.yml

    # Define additional papertrail logs from nginx (from nginx role)
    nginx_papertrail_follow:
      - /var/log/nginx/http-*error.log

    php_fpm_papertrail_follow:
      - /var/log/php-fpm/www-error.log

    sslterminator_papertrail_follow:
      - /var/log/nginx/ssl-*error.log

    ## Newrelic ##
    newrelic_enabled: True
    newrelic_infra_enabled: True
    # newrelic_license_key defined in prod_vars.yml
    newrelic_appname: "{{ project_name }}"

    databases:
      - name: drupal
        user: drupal
        # defined in prod-vars.yml
        pass: "{{ drupal_db_password }}"
        host: "127.0.0.1"
        hosts:
          - "127.0.0.1"
          - "::1"
          - "localhost"

    ## Letsencrypt ##

    certbot_email: "{{ support_email }}"
    certbot_domains:
      - "{{ domain1_name }}"
        #- "{{ domain2_name }}"
    certbot_renewal_docroot: /var/www/letsencrypt-auto
    #certbot_commands: allows yo uto customize the command to run, see ansible/playbook/roles/certbot/defaults/main.yml

    # We need to make sure not to leak sites ahead of launch
    basicauth_enabled: False
    basicauth_credentials:
      - username: wunder
        password: Ia4xoh
    # Basic auth can also be disabled for certain ip's
    basicauth_ip:
      - address: 84.20.132.177
      - address: 87.94.15.10
      - address: 94.237.27.124
      - address: 94.237.33.88
      - address: 83.136.248.231



    ## Varnish ##

    # This server also acts as a load balancer
    varnish:
      port: 8081
      memory: 1G
      # Basic configuration for error pages
      #error_header_cache_control: "no-cache, max-age: 0, must-revalidate"
      error_header_x_site_name: "{{ project_name }}"
      error_header_x_sitetitle: "{{ project_name }}"
      error_header_x_ua: "insert_GA_code"
      # It's possible to define custom error page template with
      #custom_error_template:
      # you can also set the control_key
      control_key: "{{ varnish_control_key }}"
      probe_resource_url: "_ping.php"
      acl_internal:
        - ip: 84.20.132.177
        - ip: 87.94.15.10
        - ip: 94.237.27.124
        - ip: 94.237.33.88
        - ip: 83.136.248.231
      acl_purge:
        - ip: 127.0.0.1
      acl_upstream_proxy:
        - ip: 127.0.0.1
      directors:
        - name: prod1
          host: "{{ domain1_name }}"
          backends:
            - name: prod1_http1
              address: 127.0.0.1
              port: 8080
        - name: prod2
          host: "{{ domain2_name }}"
          backends:
            - name: prod2_http1
              address: 127.0.0.1
              port: 8080

    ## Sslterminator ##
    # we only use https for this host
    sslterminators:
      - server_name: "{{ domain1_name }}"
        ssl_certificate: "/etc/letsencrypt/live/{{ domain1_name }}/fullchain.pem"
        ssl_certificate_key: "/etc/letsencrypt/live/{{ domain1_name}}/privkey.pem"
        use_dhparam: True
        backends:
          - 127.0.0.1:8081
      - server_name: "{{ domain2_name }}"
        # Certbot is configured to smash all certificates into the first one
        # So domain2 uses domain1 certificate
        ssl_certificate: "/etc/nginx/ssl/food.gov.uk.pem"
        ssl_certificate_key: "/etc/nginx/ssl/food.gov.uk.key"
        use_dhparam: True
        backends:
          - 127.0.0.1:8081

    # Forward to www and https.
    httpforwards:
      - server_name: "{{ domain1_name }}"
        forwarded_domains: "{{ domain1_name}}"
      - server_name: "{{ domain2_name }}"
        forwarded_domains: "{{ domain2_name}}"
    # You can also use extra_forwards and httpextraforwards to define additional domains to listen & forward
    # See ansible/playbook/roles/sslterminator/templates/ssl_terminators.conf.j2 for reference.


